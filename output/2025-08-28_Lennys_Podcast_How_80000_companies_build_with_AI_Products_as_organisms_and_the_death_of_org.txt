================================================================================
YOUTUBE VIDEO EXTRACTION
================================================================================
VIDEO_ID: J9UWaltU-7Q
URL: https://www.youtube.com/watch?v=J9UWaltU-7Q
TITLE: How 80,000 companies build with AI: Products as organisms and the death of org charts | Asha Sharma
CHANNEL: Lenny's Podcast
PUBLISHED: 2025-08-28
DURATION: 57m 11s
VIEWS: 4,740
LIKES: 160
COMMENTS: 10

DESCRIPTION:
----------------------------------------
Asha Sharma leads AI product strategy at Microsoft, where she works with thousands of companies building AI products and has unique visibility into what’s working (and what’s not) across more than 15,000 startups and enterprises. Before Microsoft, Asha was COO at Instacart, and VP of Product & Engineering at Meta, notably leading product for Messenger.

*What you’ll learn:*
1. Why we’re moving from “product as artifact” to “product as organism” and what this means for builders
2. Microsoft’s “seasons” planning framework that allows them to adapt quickly in the AI era
3. The death of the org chart: how agents are turning hierarchies into task networks and why “the loop, not the lane” is the new organizing principle
4. Why post-training will soon see more investment than pre-training—and how to build your own AI moat with fine-tuning
5. Her prediction for the “agentic society”—where org charts become work charts and agents outnumber humans in your company
6. The three-phase pattern every
... [truncated]

EXTRACTED CAPTIONS:
----------------------------------------
Method: youtube-transcript-api
Language: en
Word count: 11,229

TRANSCRIPT:
----------------------------------------
You said that we're just starting to scratch the surface of what an agentic society actually looks like. >> We're approaching this world in which the marginal cost of the good output is approaching zero. We're going to see exponential demand for productivity and output. The way that you scale to that is with agents. When all of that happens, the org chart starts to become the work chart. You just don't need as many layers. We were chatting about this concept you have that we're moving from product as artifact to product as organism >> because these models are so effective at this point. You want to start to tune them to certain types of outcomes. All of a sudden these are these living organisms that just get better with the more interactions that happen. I think this is the new IP of every single company products that think and live and learn. >> Planning right now is just crazy. How does anyone plan a road map when there's just like, okay, JPT5's out? We think about it as what season are we in? Season one might have been prototyping of AI and then it was all around models and reasoning models and now it's the advent of agents. Today my guest is Asha Sharma. Asha's chief vice president of product for Microsoft's AI platform where she oversees their AI infrastructure foundation models and agent tool chains while also leading applied engineering, responsible AI and growth for the core AI division. She was previously COO at Instacart and VPR product at Meta where she ran Messenger, Instagram direct, Messenger Kids, and remote presence. She also sits on the boards of the Home Depot and Coupang and she's a secondderee black belt in Taekwond do. Asha is a really unique and rare role that allows her to see more than most anyone else in the world where things are heading with AI and what works and doesn't work for companies that are building large-scale AI products. In our conversation, Asha shares a bunch of trends and predictions that she's seeing that I haven't heard anyone else talk about. Why we're moving from a product as artifact to product as organism world. Why guies are being replaced by code native interfaces. Why post-training is the new pre-training. The coming agentic society, what it takes to be a successful builder today and going forward, and also her single biggest leadership lesson that she learned from Satia, who she works closely with. If you enjoy this podcast, don't forget to subscribe and follow it in your favorite podcasting app or YouTube. Also, if you become an annual subscriber of my newsletter, you get a year free of 15 incredible products, including lovable, replet, bold, nad, linear, superhuman, dscript, whisper flow, gamma, perplexity, warp, granola, magic patterns, raycast, chapardd, and mobin. Check it out at lenny'snewsletter.com and click product pass. With that, I bring you Asha Chararma. This episode is brought to you by Interpret. Interpret is a customer intelligence platform used by leading CX and product orgs like Canva, Notion, Perplexity, Strava, Hinge, and Linear to leverage the voice of the customer and build best-in-class products. Interpret unifies all customer conversations in real time from gong recordings to Zenesk tickets to Twitter threads and makes it available for your team for analysis and for action. What makes Interpret unique is its ability to build and update a customerspecific knowledge graph that provides the most granular and accurate categorization of all customer feedback and connects that customer feedback to critical metrics like revenue and seesat. If modernizing your voice of customer program to a generational upgrade is a 2025 priority like customer- ccentric industry leaders like Canva, Notion, Perplexity, and Linear, reach out to the team at interpret.com/lenny. That's e n t e r p re t.com/lenny. Today's episode is brought to you by DX, the developer intelligence platform designed by leading researchers. To thrive in the AI era, organizations need to adapt quickly. But many organization leaders struggle to answer pressing questions like which tools are working, how are they being used, what's actually driving value. DX provides the data and insights that leaders need to navigate this shift. With DX, companies like Dropbox, Booking.com, Adion, and Intercom get a deep understanding of how AI is providing value to their developers and what impact AI is having on engineering productivity. To learn more, visit DX's website at getdx.com/lenny. That's getdx.com/lenny. >> Asha, thank you so much for being here and welcome to the podcast. >> Thanks for having me. I want to start with something that uh we were chatting about before this that I've never heard about as a concept that I think is uh is going to be really helpful for people to think about which is this concept you have that we're moving from product as artifact to product as organism. Talk about what that means and what people need to understand here. It's a it's been a pretty interesting shift especially over the last year or so because when I got to Microsoft um it was kind of right after uh open AI and the large foundation models happened and then immediately after there was this explosion of models uh proprietary open uh frontier models that were pushing the frontier curve and so they were both uh more efficient and then we started to see domain level expertise in a bunch of them and then you know even more recently models now can you know tool call and they can function call and they can take action and I think that's just giving way to a new type of products that are uh starting to see uh some success and so all of a sudden products aren't just like these static artifacts that we start to ship that's not just like hey come up with an idea or an insight go solve a problem ship it into the world maybe make it a little bit better and then have a dashboard all of a sudden the the whole KPI is what is the the metabolism of a product team to be able to ingest data and then digest the rewards model and then create some sort of outcome because these models are so effective at this point. You want to start to tune them to certain types of outcomes whether it's price or performance or quality. And so it's pretty exciting because all of a sudden these are these living organisms that just get better with the more interactions that happen. And in many ways, I think this is the new IP of every single company. And it's a completely different way to build product and to even think about, you know, products that think and live and learn, which is kind of exciting. >> So when I hear this, what I'm thinking about is when I had Michael Terrell on the podcast, the cursor co, he talked a lot about how their big mode is the data that they capture from people using cursor, selecting, accepting certain suggestions, not accepting other suggestions. Is that what you're talking about here? just like the proprietary data that companies gather from people using their product or is there something beyond that even >> I think why we're seeing like the rise of post training happen is just that the the models themselves like are so powerful as of this year Nathan Lambert uh did this study that I thought was pretty interesting of all the top leader boards and it showed that you know once a model hits 30 billion parameters the capex to actually train a model and put you know billions of tokens into a a kind of pre-run kind of doesn't economically make sense and you can kind of start to optimize on the loop and so yeah in many ways I think you can I think using your own data is the best way to do that but you can synthetically generate data you have to come up with a rewards design you have to actually roll it out you have to AB test it rigorously you have to find the job to be done or the use case that it makes the most sense for and then yes like that generates data that you can learn uh from I haven't ever seen it be one loop um for any any sort of product. I I think it's multiple tracks running in in parallel that are kind of like assembly lines if you will um and kind of producing that. >> And so is this kind of uh thesis that we're moving towards product as organism is this is this basically for model companies or is this also true for I don't know SAS businesses and tools and user tools. look like I think that um software as a primitive is changing and kind of the artifact inside of it uh is is a model alongside the software components itself. And so in many ways I think that you know software products will all be model forward products if you will. This reminds me why I just had uh Nick Turley on the podcast who we were talking about before we started recording head of chat GPTt and uh I was asking just like how much does chat GBT change with GBT5 coming out and he's just like it's the same thing they're the same product it's just like G the model tells us what to do in the product of chat GBT and um and it makes me think about something else of just like you would think why can't just GPT5 build its own user interface just like as you use it it just evolve it's sort of what it's doing with canvas and all these things. But like that's like another way I think about when you talk about this idea of product as organism is the product the UX can shift based on how you're using it and evolve automatically without having the product teams have to do anything. >> I 100% believe that's where the world is going and that my experience should look and feel different than yours. I mean that's kind of been the admin and personalization but now you can do it on the fly in the future. So I think that'll be a pretty fun world. I I also think it will look different for agents and it will look different for kind of power users and new users and all those things too. >> Let me let me kind of zoom out a little bit and ask you this question. You work with a bunch of companies that are building AI products on your platform, other platforms. I imagine some just do an awesome job and are killing it. Some are struggling. What do you find are kind of common patterns across the companies that do really well and have a lot of success building really successful AI products and ones that don't? >> Yeah. So, I think there's things that are kind of more broadly applying to the organization themselves and then there's uh things that are applying to the people who are building the the AI uh products too. So more broadly I think there's there's a pattern that's starting to emerge for successful companies like one is they are embracing AI and everybody becomes AI fluent. So I think everybody's using some sort of co-pilot or some sort of AI in their day-to-day workflows like job one so everyone's not afraid of it understands how we can raise the ceiling and and kind of lower lower the floor for like all sorts of skills and and and tasks. Number two, from there they start to say, okay, how can I take a process that already exists and apply AI to making it better? That might be uh something like customer support or taking fraud down from 15 days to kind of cure to to 10 days and like going through that entire loop of mapping out the process, applying AI to it, seeing some sort of impact and then feeling the the P&L or the kind of intrinsic benefits that that that looks like. The third thing then is like, okay, great. Now that you've seen impact, your everybody is using it. How do you actually use it to inflect growth? And that can be something like improving the customer experience, so your LTV or retention improves. It could be co-creating a new kind of set of concepts or categories. It could be, you know, going from agents that are embedded to agents that are embodied and then being able to take on, you know, exponential number of tasks. I think that where companies fail is that they're doing AI for AI sake. They have a ton of projects that they're kicking off at the same time without a blueprint to understand how it actually worked from what their stack looks like and they aren't aren't treating it like a real investment and so they don't have the measurement and the observability and the eval kind of set up. It's going to do that end to end. I think the tricky thing is for enterprises is the the technology is changing. There are something like 70,000 enterprise tools like in the AI space launched last year. it's really hard to know which one you should use for what outcome. And so you really need to bet on a platform or some sort of app server type layer that allows you to swap things in and out and not really be beholden to anything any any one technology or any one tool because the reality is is the whole thing is going to change. Feel like you have to actually build for the slope instead of the snapshot of where you are. So that's that's kind of what I see at the enterprise level. I think the the builders themselves are actually changing pretty fundamentally too, right? Every single advent like change of technology has invented like a a changing set of roles. um like mainframes to PCs like the whole garage engineers and then when we went from you know server to cloud and mobile there was like SEO specialists and CDNs and you know growth PMS and UXR and and and you know front end backend and yada yada and now I think we're seeing this advent of of the polymath and where um I think that full stack builders are kind of having their renaissance where if you take like an average organization, it takes probably 10 steps to launch a product. Um, it could be security review, it could be spec, it could be, you know, user research and there's what five plus functions. Um, maybe maybe six or seven. I'm being generous for for a normal organization. And then you have like six or seven layers. So all of a sudden you have 500 different touch points that have to happen to get a product out. And when there are 500 models available a week or 500 new technologies, that is just insufficient. And so I really believe in in the concept of a full stack builder. You're seeing it with a bunch of the AI native companies that are coming up. I'm even seeing it in enterprises that have been around for 50 years starting to operate in that way. And I think that gives you velocity and throughput and then gives you the whole loop to start to actually uh metabolize and go through that much faster. That's definitely a recurring theme on on in these conversations is just kind of the ven diagrams of PM engineering design are starting to converge and more and more of other disciplines within your role. So PM needs to level up on design and or engineering. >> Yeah, I completely agree. I think it's all about the loop not not the lane here. Um, and so I think that whatever uh function you are, you have to be obsessed with trying to understand like the efficiency or the cost of of the product, the actual rewards or you like you know system design that you're going after, the actual UI UX, how that actually manifests for agents or people. You have to start to get really good at that really quickly. >> I like this phrase you just use the the loop and not the lane. Can you say more about that? Oh, it's just going back to our our previous discussion on, you know, the signals loop and uh products evolving and becoming these living organisms and not these artifacts. And if if you think about getting really good at that loop, I think that is the product that is the IP that is the future of every organization. And I think feedback becomes continuous and observability becomes the culture. And I think that um functions start to to blur um in future workforces. To make this even more real, is there an example of a product or company that is a really good example of this of this doing this well living this kind of loop life? >> I think most companies that we're seeing in the space from an AI perspective are doing this. I can tell you about a couple that we're working on. Obviously, in in the coding space, you mentioned cursor. GitHub has very similar features that we're using kind of an ensemble of models that have been fine-tuned across, you know, uh 30 different countries. all of the languages to actually then go iterate in a loop for next edit suggestions or code completions and things like that. We've got um an AI uh product uh called Dragon that's for physicians and uh we saw a massive difference from when we used you know synthetic fine-tuning to when we annotated 600,000 patient um physician interactions by experts and actually fed that into the model and continuously optimized it to then produce like you know I think we're sitting between 30 and 60 character acceptance rate depending on the run to something like 83 3%. And so that required a small group of individuals, not a large organization that were able to actually iterate in this loop across functions and kind of all of those lines dissolving. >> That's super interesting. So kind of what what I'm hearing here is if you can gather data on how things are going and then spend a lot of time creating high quality labeling to feed back into it to fine-tune it is basically the big advantage is is how you win in in a lot of this stuff. Okay. Along these lines, something else that you told me that you've been noticing that I want to hear more about is the shift from guies and you kind of referenced this from guies to code native interfaces. >> Yeah. >> Talk about what that means, what that looks like and what this means for folks building product. >> I think it kind of goes back to what does it mean to kind of be a product maker in the future. I think that everybody's instinct is like is a is a uh gooey. But if you kind of think back in history like databases kind of went from the desktop kind of down into SQL. I think cloud was all about consoles and now it's about Terraform. And so I think we're literally just seeing the same pattern that's played out in history start to play out in AI. And like everything else in AI, it's like Moore's law and it's getting faster. And so I think that's just accelerating. And if you think about like a stream of of text just connects better with LLMs. And so I think that there's a bunch of trends that are kind of working in the favor for like the future of products being about composability and not the canvas. And I think that product makers really need to rewire their mindset around this because I think we spend an inordinate amount of time thinking about the the UI of something rather than how something composes, how an agent's going to be able to read something. How do you actually get infinite scale? how does that collaboration start to work? And so I think it's just a new uh way of thinking even though it's long been a trend uh that's happened in these changes. >> So is the prediction here that it's uh terminals like uh claude code sort of experiences or is it that it's agents that are taking what or is it both? Is that kind of what you're sharing? >> I think it's yeah it's I mean look if I if any of us knew that would be amazing. Um, I just think that the reason why terminals and are are uh great and it feels really great when you code is because of the way it can interact with an LLM with the text stream. And I think that both can be true that humans will continue to commit code and we'll find you know new ways to actually do that whether it's in the IDE whether it's in GitHub copilot whether it's in you know some new development environment. Um, and I think that we'll do that with agents and agents will do that with each other and we'll continue to kind of evolve from there. >> We had a Brett Taylor in the podcast, founder of Sierra, and he had a similar prediction that all software companies are going to become agent companies and it's essentially what you're saying here is that like your software will just be this thing that's running in the background and there's much less of a guey. Do you think it still becomes like this chat interface the way we're kind of getting used to? Is that like the primary interface with agents or is there anything else happening? Like I think that conversation is a really powerful interface. I worked on messaging. I think it's um it's it's great for lots of forms of communication, but it's not the only form of communication. I mean, we use email today to to collaborate with each other. We use Docs like everybody uses Word and PowerPoint. Um you know, there's a billion people living in places of artifacts that I think can become uh really important composable pieces of the picture. And I think they should be. So I I'm excited about that. I think that um chat chat will be important but uh certainly not sufficient. >> What's interesting is chat GBT the number one fastest growing product of all time maybe the most important consequential product of all time is chat. >> Yeah. It's great. It works. >> Um I think the question we have to ask ourselves is will it only always be chat? >> Yeah. Yeah. The way Nick described it is uh we're in the MS DOSs era of uh of chatbt and there's a which is interesting. It's like the reverse of what you're saying. So it's like maybe if you start as that and then you have to move to guey and then maybe it'll go back. But he said there's going to be like a Windows version where it's much easier to understand what the hell is going on. >> Yeah. I mean look like I think that it's it's smart. You should uh every company should be bringing AI to where their users are and chatbt has all of their users using chat and it's a phenomenal product. Um, and we've got lots of people around the world that do work in many different ways and we should be thinking about how we use AI to enable that. >> So, let's talk about agents. You spent a lot of time working with agents, building agents, helping companies build agents. You have this really great quote that I love. You said that we're just starting to scratch the surface of what an agentic society actually looks like. Uh, I just love this idea of an agentic society. What is that? What does that actually look like in the future? >> Oh gosh. I mean, it's it's funny. You were telling me about your 2-year-old and I have my son Rome just turned one and I can't even imagine life at two cuz I'm just like that is so far away and what will have then developed. Look like I think that in the future uh work will look really different. I think that we're approaching this world in which the marginal cost of um a good output is approaching zero. And I think when that happens, we're going to see ex exponential demand for productivity and output. And I think that the way that you scale to that is with agents and it's agents that are embedded and they their tools and their pieces of software. And I think there's going to be uh a ton of those far more than the software that we use today. And then I think there could be a set of embodied agents that are developed and we start to see that now, right? You can assign a pull request to co-pilot. you can uh create a software development rep that's agentic that can kind of do some of the lead generation and mining for you. And so I think that when all of that happens, the work chart uh the org chart starts to become the work chart. I think that tasks and throughput become more important than than they have been before. I also think that you just don't need as many layers. like I think the whole kind of organizational construct might start to look different in a few years and so uh I I'm pretty excited about it. I think I think meetings will still be meetings and and they'll be weird. Uh but I think they will be a bit better. Um and I think there'll be lots of changes. I think that for the average employee, my hope and and kind of my optimistic view is that they will be able to expand their skill set because now they have their own agent stack that they can bring with them to work just like you can kind of bring your own device and you can um start to to have access to a set of skills that you never had before. And so if you think about, you know, the 20 million people that maybe sit in that that space across America and they get 20% more skilled, that's like pretty exponential for GDP. And so it's it's pretty fun. >> This comment you made about the or the work chart becomes the ORC chart is such a profound concept because I don't know if this is what you meant, but what I'm imagining is you build these teams and here's your mission and goal and KPIs and it's humans and like oh cool go do this for us. And what I'm What I'm recognizing as you're talking is like, okay, but if you have agents doing that, that is their prompt. Go drive conversion. And then you have all these agents and that's the org your job. This is the the conversion onboarding team and that's like a bunch of agents off doing their work. Is that what you mean? >> Yeah. I mean, yeah. I think like today we think in terms of hey, who reports to who in the org chart and who's responsible for these areas? And I think at the end of the day when you have a set of capable agents and people are capable of more things you're not going to start to think in hierarchy and communicating upward are going to start to figure out like kind of outward taskbased type of opportunities. I think that humans will always decide in organizations how AI is used and what we want to apply it to. But yeah, it's it's kind of exciting when a a new issue comes up or a new task comes up. How do you actually automatically decide where to route it? Who's working on that task? How do you actually go work on it? How do you observe if the agent's doing the right thing? How do you fine-tune it if they're not? Like all of those things. So, I think that um I'm just speculating, right? Uh uh that there's a world in which that could be pretty exciting. And I think that's great because we can just accomplish more. >> You touch on this point that reviewing the work is going to be increasingly important. If you have like a thousand agents off doing work, it's just like, holy moly, that's a lot to look at, make sure they're doing the right thing. How do you think that evolves? just like being able to scale your ability to review the work that's being done. >> Yeah, I think that um the same kind of loop that we talked about becomes increasingly important like fine-tuning and self-healing, observability, really good e valves, all of that. I mean, the good news is that there are systems that manage this for billions of people today that already exist. And so, I think that, you know, we don't have to reinvent the wheel. There's certainly going to be a bunch of new things to learn if that world ever plays out. Um, but I think, you know, uh, managing devices and policies and group access, all those things are solved problems. Uh, which is good. >> This episode is brought to you by Finn, the number one AI agent for customer service. If your customer support tickets are piling up, then you need Finn. Finn is the highest performing AI agent on the market with a 59% average resolution rate. Finn resolves even the most complex customer queries. No other AI agent performs better. In head-to-head bake offs with competitors, Finn wins every time. Yes, switching to a new tool can be scary, but Finn works on any help desk with no migration needed, which means you don't have to overhaul your current system or deal with delays in service for your customers. And Finn is trusted by over 5,000 customer service leaders and top AI companies like Anthropic and Synthesia. And because Finn is powered by the Finn AI engine, which is a continuously improving system that allows you to analyze, train, test, and deploy with ease, Finn can continuously improve your results, too. So, if you're ready to transform your customer service and scale your support, give Finn a try for only 99 cents per resolution. Plus, Finn comes with a 90-day money back guarantee. Find out how Finn can work for your team at f.ai/lenny. That's finn.ai/lenny. So a lot of this it feels like it's in the future. I know a lot of this already happening. People are using agents in all these different ways. Is there any way you have found value in working with agents of some kind other than coding I imagine is a big part of it. But just anything there that's like wow that's a big deal >> at this point. We have AI and agents and many of our workflows like one of my favorite ones. So right now are uh my engineering partners out. So I jump on the the live site bridges when something goes down and you know as something as simple as like you can automatically get a summary of everything that just happened cuz usually there's 15 people talking you don't actually know where the incident started where it's going to end and everything and then all of a sudden I have that and I can kind of figure out and ask questions and get updates like awesome like I think that um kind of the the entire kind of DevOps area is is changing. We use it to uh we use Spark to create prototypes. So everybody on the team is expected to code, but like you know sometimes just chatting in and like talking in real words actually gets you to a prototype that's more interesting and like more expressive and reflective of your creativity. So we use that. I mean I think everybody's using AI to write. um everybody's using uh AI to kind of uh find ways to have efficiencies and like coming up with uh documentation and things like that. And so I think it's everywhere which is cool. Um I think that we're just scratching the surface though for kind of like what's possible in terms of working with agents. >> That's how I always feel when people ask me how I use AI. I'm just like it's just like everywhere. It's just like in every little sprinkled in everything I do now. I don't even know how to describe it. >> Yeah. It's hard to remember a world where it didn't really exist. >> Yeah. There's there's a a product manager that I collabed with, uh, Peter Yang, who talks about how he just doesn't I don't even know how to do a strategy doc anymore without AI. Like, how did people do this without having someone >> Do you think there will be strategy docs in the future? That's going to be interesting. >> I I have this like I wrote this post once of like which skills of a PM job will be most replaced by AI and strategy is the one that people are the most have the biggest debate on. Like you could argue, I don't know if like let's get into it briefly. Uh you would think if some AI had all of the information you had about where the market's going, your metrics, your product today, it would be so good at developing a strategy for you. Many people think that's the one thing AI will be really not good at for a long time because that's where we need all this human judgment stuff. I don't know. Do you have any thoughts? I think that some of the most consequential products in the world required a bunch of kind of deterministic like logical sets of inputs and like sparks of creativity and imagination and judgment and vision that could not be achieved without humans. um like uh Microsoft is like the vision of a software factory and creating what Microsoft did uh wasn't inevitable. Um Instacart uh you know there was web vans and web bands didn't work but Instacart did work because of a different way of thinking about it. Uh that came through judgment and iteration and a bunch of things that you couldn't have learned unless you actually went through the process. Uh you know the iPod like you you go forward. So I think it's there. I think docs themselves like for every idea, for every you know need will just start to kind of fade into you know applications and and different artifacts in the productivity suite which um you know is just a different way of working. >> Yeah. Like your your original question which I didn't quite answer but I think is important. You're asking like do we even need strategy docs? And I guess it's just like somehow everyone needs to be aligned on the strategy. Maybe it's not a doc. >> Yeah. Could be some other If if you if you architect an organization the right way to keep up with AI, you know, you you need a learn you need a different alignment mechanisms than traditional ways of actually working. >> So let me ask you actually about that. So planning right now is just crazy. How do you like how does anyone plan a road map when there's just like okay GPT5 is out. Okay, great. Uh what what what works for you for setting actual a road map and a strategy for your team? Like how far out do you plan? How often do you have to rethink everything? >> I mean, I'll caveat this by saying like everyone's just figuring it out and it's a lot harder to figure it out when you're a larger organization than when you're, you know, much smaller and you get to kind of uh, you know, run something yourself. And there's pros and cons to both. So, here's what we do. We, uh, the company, um, historically, at least in our product teams, had kind of semesters that they planned again. So, think of that as every six months. There's kind of a strategy, look back, look forward, all of those things. I think that's very valuable. I think like the idea of six months though and really understanding what's changing out in front is is truly challenging to kind of have a overbaked situation. And so we kind of think about it as you know what season are we in? And so a season which is very uncomfortable can be denoted by a set of secular changes that are happening in the industry or that are happening from customers. And so you know you can think about season one might have been like you know the prototyping of AI and kind of the early GPT work and then it was all around models and reasoning models and now it's the advent of agents and so that can last a year that can last six months that can last three months but like grounding everybody on the the ethos of what are the secular changes what are the customer problems we need to solve what does winning look like so everybody has that shared sense what is the northstar metric is something that we do. The second thing that we do is that we have kind of loose quarterly OKRs. So like okay if we believe that what do we need to do next quarter to actually put ourselves on a path to that and then from there uh you know teams are operating in squads and they're kind of setting out you know four to six week um goals that they're trying to go after for problem areas to go ladder up to that you know and especially as the platform for the company and the platform for our Azure customers uh with AI I will say we we go through lots of changes to that all the time and I think we have to just have an openness that that is the business that we're in. I think the other thing is just like we try to leave slack in the system not just for the unplanned but for the the slope. I think that we have to continuously be thinking about how we're going to disrupt the platform um in our thinking and what we need to be investing in to make that possible. And so we try to do a little bit of both. >> This is awesome. So what I'm hearing here is there's this concept of seasons and everyone's aligned. Okay, this is time for agents. This is what's happening right now. We're going to center around our strategy around agents and then there's these loose quarterly OKRs you plan for 3 months roughly and then you leave some slack in the system for things to change. >> Yes. >> Is the current season agents? How would you describe what season we're in right now? >> Yeah. Okay. It's agents. Rise of agents. >> The rise of agents. That sounds like a Terminator movie. Do you uh is do you have a sense of what the might next season might be? Is there any like oh this might be coming next? >> Gosh. Um I don't um but I think that look like we have you know more than 15,000 agents that are uh deployed on our service today um at least at the the Azure service. There's a bunch of other platforms in the company and I would just say that I think that we should really focus on um making sure that we have all of the alignment, accountability, observability, evals to making those agents like great. I think that uh Manis's breakthrough in the space was that they could like do these tool calling loops and have agents kind of do longer running tasks that really no other platform was able to do. I think stuff like that is critical. Memory is critical. Like there's still uh a bunch of building blocks that I think like are leaving agents incomplete in the wild that I think we have to really sweat the details on before we move on. >> So it's just like uh agents till the end of time until super intelligence and then we're just on beaches chilling. >> Yes. Agents until dank memes. Um look like I Yeah. I I think the cool thing is is like something new could come in 3 months, something new could come in uh 13 months. I think like we kind of have this conviction on a set of building blocks that we want to provide to enable these agents to uh endure and and have high endurance. And so that's that's what we're focusing. >> When you said there's 15,000 agents, what does that mean? Is that 15,000 types of agents you can use or is it like that's how many processes? uh that's you know customers 15,000 I I think I should re reference the numbers 15,000 customers who have produced agents I think the number of agents is actually like millions >> 15,000 customers that are building a specific kind of agent on your platform and they're running and the number of agents is in the millions just running in the cloud >> exactly >> okay how it's wild some crazy numbers here >> okay so let me just kind of go in a slightly different direction you're kind of in this you're kind of in the center of the storm of a lot of AI just like seeing everything that's going on. Is there something you wish you'd known before stepping into this role that you're just like, "Okay, I see. I didn't expect this." >> When I first took the role, it was kind of described as like the belly of the beast. And I um had spent most of my career building products at the center of machine learning and applications or businesses. Um and I think that to my surprise a lot of the learnings have translated in terms of what makes a great platform um is what makes a great product. So and and like the thing for me is like it's often in the invisible work or the like not the pixels that actually drives that. So like for example one of the first companies that I worked at was a company called Porch Group. I was employee 7 and we knew we wanted to help people take care of their home. And I think we invented so many features like the home report or like a way to manage your home or like house style inspiration where you could like see all of the the houses and map every single room. And the single most important thing that we could could have done and did during my time there was create a matching platform that matched the 6 million professionals with the 1300 service types of the uh 37,000 zip codes and all of the homeowners in North America to actually take care of their their home. And that was just the game of inches and kind of optimizing that engine in order to create higher quality leads. Essentially, that's what got us to the the first 500 billion uh $500 million valuation. That's eventually what we built on to actually have other vertical services uh and software platforms that that IP of the company. Same with messaging. Um the number one learning that I had was look like WhatsApp didn't win because it had stickers or stories or dark mode. In fact, I I don't even think it had all of those things when it won. It won on a few premises because one was the phone book. Like you knew that when you use WhatsApp you could reach every single person because you had their phone number and those are the people that you care about when you're using messaging. It was the reliability and how fast it was. Like I could text my grandmother in India and know that she would get my text message all the time. And then it was the privacy. Like when you are sending 200 messages a day to the four people you care about most, you want to make sure no one else can read the messages. And so the end to end encryption really mattered. And so it wasn't the hundred hundreds of features. It was all in kind of the infrastructure and the platform. And same with Instacart, right? Like there are so many loved features of Instacart, but at the end of the day, it's a billion items that updates 3,000 times every single minute to get homeowners their groceries from the store that they love. And so I think I I wish I had known that because I think it would have curtailed my learning curve to say that it's not all the features for the the platform that matters. It's the data residency so the hospital in Germany that's fine-tuning a model can do so in confidence and the data isn't going to leave the region. It's the availability. It's the reliability. It's, you know, making sure you have the right selection of the tools that enterprises need and the right way to retrieve the knowledge. And that's kind of the the platform that we've built. but just didn't fully have that picture that those learnings would translate. >> That's really interesting. So, what I'm hearing is people kind of undervalue just how the simp the simple bottom of the Maslaw hierarchy of of things you got of of things that help you win in in platforms especially in messaging platforms including so it's like reliability uh privacy I don't know availability >> yeah performance reliability privacy safety um all of those things. H let me ask you kind of a totally different question. When uh we were going to record this previously and you're like oh I have a big meeting with Satia I got to do instead. Uh and so we moved to a different time. Uh very few people get to work with Satya. He's quite a quite a successful leader. What's something you've learned from him about I don't know leadership or product building. >> I've learned that optimism is a renewable resource. um like this company for 50 years has had you know every reason not to succeed and it has and uh even as it's had early success in the AI era and challenges and other successes like and the space is developing so quickly. I think that his ability to generate energy and to use his optimism to kind of renew everybody's dedication to the mission um is unbelievable and I think it's such an important part of the culture. Everybody talks about the growth mindset. That's real huge part of the culture. But I think the ability to to generate energy and clarity on what we need to go do and uh use optimism to renew the commitment every single day for every single person in a entirely competitive talent space is like is pretty amazing. >> Is that something you think that is just innate to him or something that he's worked on to just generate this optimism on behalf of everyone? >> I have no idea. Um we should ask him but I am like deeply impressed by it. It's interesting that a lot of this comes down to just vibes. There's just like this vibe of, you know, like I imagine it's not him just the words he uses. It's just like this energy that he exudes, optimism and energy. >> I mean, think about it. We all choose to to, you know, someone just said this to me and I thought it was great. We all choose to close the door on our kids every single day to go work on something. And so you have to work on something that is like deeply moving to you and is like, you know, you have a deep belief that is going to make the world a better place. And like I think that's why it's vibes. Like I I think you you have to follow um and have a sense of duty towards a mission that is bigger than yourself. >> It makes me think of a line that I've referenced a couple times on this podcast that's really hits people really hard that the only people that'll remember you working late are your kids. >> Okay. I don't know where we're going with that, but that was like, you know, now you're like, >> that's too much. We've gone too far. >> Oh man. Okay. Well, let me ask you this. What's What's driving you? >> We could have said our customers. We could have We could have gone a different route on that one. >> This is the real the real stuff. Um what's driving you? What's driving you? What's keeping you excited about uh the work that you're doing? >> What AI will help us do from a workforce perspective? What it will help us do from a healthcare perspective? like you know my mom has cancer and I think a lot about how wow we might find a way to solve the form of cancer she has in my lifetime and I never thought that was possible 3 years ago like all of that's deeply profound and the thing that like I personally think a lot about now that we know that we're living in this time working with such powerful technology is the the effects of it and how I can you know best build a platform where people can make use of it so Like the reason why I work at Microsoft is because like the whole ethos of the company is like how do I help people and businesses achieve more and like more for me in the thing like I think about at night um outside of um you know GPUs is um you know I I think about like will my son have classmates in the future and that's not because agents are going to replace them. It's because the the fertility rates are declining, right? Like the the average birth rate in the 90s when we were growing up was like three and now it's 2.3 and in 2050 it's estimated to be, you know, below replacement. And I think that AI can have such a big effect on it and already is like I was just reading about a hospital in London that's you know able to improve pregnancy rates by using AI to match you know eggs and sperms and they're cutting costs at the same time. Uh you saw with the ChachiBT5 launch yesterday such an amazing story about how ChachBT is helping in healthcare. you know, Stanford's one of our big customers with the with the platform that I uh build and they're working on using AI for tumor reviews and um it's just like that is like it is these sets of things that will like move humanity forward and expand our lifetime and give us the like privilege to solve hundredyear problems. And so that's that's why I'm excited and that's why I do what I do. >> Yeah. Especially in your role where you're building the platform that enables all of this. I could see how uh impactful that could be. Asha, is there anything else that you wanted to touch on or share or double down on of anything we've talked about before we get to our very exciting lightning round? >> We touched on it a little bit, but I think that um with the advent of agents and products that think and can act and reason, there's going to be this kind of new wave around RL. And it I have a deep belief that that that will become one of the most important product techniques kind of of the next season or at least the next few seasons >> in RL is reinforcement learning. >> Yes. Yes. Exactly. Like I believe we will see you know just as much money spent on post-training uh as we will on pre-training and in the future more on post-training. Um we talked a little bit about Nathan Lambert's study where his review was that you know when a model hits 30 billion parameters it makes more sense to kind of fine-tune and optimize that. you know 50% of developers uh according to surveys are now fine-tuning uh and we know fine-tuning is good but like if you actually go through the full loop you can get better results so I think there's there's a bunch there and I think there's a whole new set of infrastructure and platforms and uh companies that will be created that are all around this part of the stack and so um I think it's an exciting time to be in the platform space but it's also an exciting time to be starting companies and be thinking about those problems >> I want to make sure people truly understand what you're saying here cuz not everyone truly understands post-training, pre-training. What's the simplest way to understand the difference there and just why it's such a big deal that that investment is moving to post-training? The way that I think about it is you know to create a foundation model um creates a tre it requires a tremendous amount of compute a tremendous amount of science uh expertise as we're seeing who's uh which the cost for scientists or the average value is rising dramatically and I think you know an expertise that we've seen it like isn't everywhere in the world right now and so it's just a big capex investment to do that. And with this explosion of models that we talked about in the beginning, there's a lot of good models to choose from for different domains. And so I think that you just get more leverage economically. You get more leverage from a taste perspective of how you actually want to steer a model uh if you're actually doing reinforcement learning or some sort of fine-tuning to actually start to optimize what's off the shelf for some outcome like price, performance, quality. And if you think about that, that's that's not crazy, right? like you know ranking is an age-old uh optimization problem where you don't want to just take what's off the shelf because there's like amazing frameworks and UI and kind of components that you know the world is React components that are out there. You still want to tailor the experience to a set of use cases or set of people. I think it's just the same kind of industrial logic. >> So in practice what you're what this means is there's like a GPT5 model. You're saying there's a lot of opportunity and a much more efficient way to spend money, which is take something like that and then train it on additional custom data that you have, whether it's data or just reinforcement learning, maybe even with with humans to align it with what you wanted to achieve. >> Yep. And it could be your own data, it could be data that you buy, could be synthetic data, could be, you know, something else. But I think that um I I think that we're kind of going to start to see, you know, more and more companies and organizations kind of start to think about how do I adapt a model rather than how do I take something uh off the shelf as is or invest a bunch of money in building my own models. >> Yeah, I forget. I know Curser when he was on the podcast, he shared that they have a bunch of models that that support your experience with Curser and over time they're just going to have their own thing. I I forget who it was, Winerf or one of those guys just uses their own model now. They don't just plug into Claude. >> I'm much more in the model system camp. Like I believe in uh model diversity. I think that in experience like Claude uh like Sonnet 4 is awesome for a set of use cases versus GPT5 is different for different use cases. I think that there's some tasks where you care about the latency of the model. you want, you're like cool with the thinking time or you kind of want uh quick retrieval and things like that. Like I I think the the beauty is there's a lot of models that can kind of help you achieve that. And so I'm much more in the like model system uh rather than one model to rule them all. >> Is that the right term? I've also heard ensemble model ensemble of models. >> I think about an ensemble of models as a set of multiple models that then you can you know fine-tune and deploy independently. But you know at this point we're all making up different terminology to define things that we like have deep beliefs on that have like you know uh limited sets of data points because everything is moving so fast. >> Yeah. With that we've reached our very exciting lightning round. >> Yes. I'm very excited for our lightning round and I'm like turning down the lights >> and then it'll come back on I imagine in one second. Okay. First question. What are two or three books you find yourself recommending most to other people >> at work? It's probably Thinking Machine. Uh so it's all about treating the the cause not the symptoms. The like you know prototypical example is like you know in the if if you want to solve traffic you don't actually put up you know speed bumps or or speed limits you actually have to like solve walkability and mobility and kind of like why people actually use cars. Um, outside of that, uh, kind of personally, um, the CMO of Instacart, uh, recommended to me Tomorrow and Tomorrow and Tomorrow, and I read it like last month and last year and the year before because I love it so much. It's like this like beautiful story over 10 years. >> What are some favorite recent movie or TV shows you really enjoyed? >> Formula 1, Saw Twice, uh, For All Mankind. For all mankind, I like season 4. Uh, I don't know. I I like kind of playing out alternative theories to kind of how the space race might have looked. >> Do you have a favorite product you recently discovered they really love? Could be tech, could be gadgets, could be clothing. >> So, I just joined the the board of of the Home Depot and we're doing a little renovation project. And so, uh there's this new kind of new to me DeWalt kind of power pack and they use pouch cells. And so it's like 50% like lighter but with all the the power and it's like awesome for drills and like things that you know I need to lift up with one hand that feel heavy. So I love that. We also are testing out this new brilliance smart home kind of system. Uh so it's like kind of 4 in of like high-res middleware that allows you to kind of connect to everything. And I've like reached peak kind of just sat with like the explosion of all the technology required to actually use your home. So, it just might be the middleware that like sticks, but we'll see. >> Did you say DSAT? Is that short for dissatisfaction? >> Yes. >> Sorry, I'm speaking in acronyms. >> Whoa. I've never heard that. Dat. It's like I love that. By the way, I love that you're on the board of The Home Depot. What a what a different part of the spectrum of of of work. >> Yeah, it's been it's been awesome. the very first board meeting, the head of philanthropy been at the com has been at the company for decades and she said, "Welcome to the greatest company on the planet." >> Pretty special. >> You're like, "No, Microsoft." Uh, is there something you've learned from working with that with them that you've brought to Microsoft? >> Like it's it's it's new. It's this year, but I've long worked at on products that kind of had that impact. So, like when I was at Porch, it was Pros. At Instacart, we had 600,000 shoppers. Um, and obviously the Home Depot depot has associates. One of my favorite things about the company culturally is they have this inverted pyramid where instead of having like executives at the top, the associates are at the top and the stores themselves are uh headquarters uh and and then the the kind of traditional HQ is kind of support. Um, and so it's just like it's so customer- ccentric and when I think about amazing execution and creating these durable long-term institutions and kind of how culture and ideology and and kind of leadership is formed. Like I think about that and I think about at the end of the day, you know, AI is going to have an impact on every single person and every single job. And it's like amazing to kind of just spend time with people outside of our bubble and and kind of really try and learn what their real pain and problems and how they think about AI and how they think about technology and kind of what we need to do. >> Okay, two more questions. Do you have a favorite life motto that you find yourself coming back to sharing with friends and family? >> I I I used to use the kind of minimize regret framework. Um, and I it's it's great and I've I've used that for a long time. I think that probably once I got into my adult years and started to kind of have a family and things like that, my uh kind of just worldview changed a little bit and I it was all about maximizing kind of option value and it just gave the things that I naturally cared about like family and health and trust and relationships like it was just kind of like a new level of like value associated with those because all all of a sudden learning rest on the weekend can like compound in the future or you know having good health can compound in the future. You don't like have to trade that off of working extra hours or you know the importance of family and all of those things. And so I think that like the my worldview is like when I'm 70 it's not about what do I look back on in my life and count the number of regrets. It's really about like looking forward in the number of adventures I will still have because I have like accumulated this wealth of of skills and trust and you know people and and family and impact and things like that. >> Speaking of skills, uh the internet tells me that you have you're a second degree black belt in Taekwondo. >> Uh why oh gosh, is this true? And then I have a question about it. >> Uh this is true. >> Okay, that's incredible. What's some Why are you Why is this embarrassing? That's an incredible thing. Uh >> I'm I'm generally embarrassed anytime anything is discussed about >> Okay, great. No problem. Uh what's something that you learned from Taekwond do uh that has helped you with life or or work? >> Taekwondo is more mental than it is physical. Um and so I think that's the same with kind of like all of our jobs and making product. Like I think it's like mental clarity. It's it's courage. It's it's kind of the um ambition to kind of see things through and be unwavering. And so I I think that's literally, you know, what it taught me outside of meditating, which probably took me the entire time to like actually learn to meditate and clear my head. Um but uh yeah, I I think it's awesome. Like I think everybody imagines like you know flying sidekicks or running up a wall and like you can do those things too but the real value is like the mental pursuit of it all you know >> and you can do those things too. Wow. Okay. Good. I got to get into this. Asha, this was uh awesome. Is there uh Oh, actually two final questions. Where can folks find you online if they want to maybe follow up on anything if you want people to reach out? And how can listeners be useful to you? You can hit me up on LinkedIn um or email or text. Um I think all of those are traceable. Look, like how can you be helpful to me is I I think like we're all early in in this journey and great platforms are built on great use cases and built on great customers. And so like if you have feedback, you have ideas, you have like things you want AI to be able to do um to help you achieve more, I'd love to hear it. I think the the thing about all of these changes is that all all of these new products and use cases will be developed everywhere and so I'm always just thinking about how can we be the platform to support that. >> Amazing. Asha, thank you so much for being here. >> Thanks for having me. >> Bye everyone. >> Thank you so much for listening. If you found this valuable, you can subscribe to the show on Apple Podcasts, Spotify, or your favorite podcast app. Also, please consider giving us a rating or leaving a review as that really helps other listeners find the podcast. You can find all past episodes or learn more about the show at lennispodcast.com. See you in the next episode.